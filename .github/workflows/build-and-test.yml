name: Build and test

on:
  push:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"
          cache-dependency-path: |
            cli/lega-commander/go.sum
            services/mq-interceptor/go.sum
            services/cega-mock/go.sum
      - name: Cache gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/cache
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run e2e tests
        run: |
          ./gradlew clean
          ./gradlew start-docker-containers
           CONTAINERS=("tsd" "db" "mq" "proxy" "interceptor" 
                      "postgres" "ingest" "verify" "finalize" 
                      "mapper" "intercept" "doa" "cegamq" 
                      "cegaauth" "heartbeat-pub" "heartbeat-sub" 
                      "redis")
          # Wait for all containers to be running
          for container in "${CONTAINERS[@]}"; do
            echo "Waiting for $container to be running..."
            until [ "$(docker ps -q -f name="$container" -f status=running)" ]; do
              sleep 1
            done
            echo "$container is up and running."
          done
          ./gradlew :e2eTests:test --stacktrace
