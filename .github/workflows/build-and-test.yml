name: Build and test

on:
  push:

jobs:
  build-and-test:
    runs-on: self-hosted
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: 1.25
          cache-dependency-path: |
            cli/lega-commander/go.sum
            services/mq-interceptor/go.sum
            services/cega-mock/go.sum

      - name: Build builder image
        run: docker build -f builder.Dockerfile -t temp-builder:pr-${{ github.run_id }} .

      - name: Start E2E environment
        run: |
          chmod +x ./e2eTests/scripts/bootstrap.sh
          ./e2eTests/scripts/bootstrap.sh cleanup_workspace || return 1
          ./e2eTests/scripts/bootstrap.sh apply_configs || return 1
          ./e2eTests/scripts/bootstrap.sh check_requirements || return 1
          export BUILDER_IMAGE=temp-builder:pr-${GITHUB_RUN_ID}
          cd e2eTests/ && docker compose -f docker-compose.yml -f docker-compose.override.yml up --pull always --build -d

      - name: Wait for E2E tests to complete
        run: |
          echo "Waiting for e2e-tests container..."
          timeout 600 bash -c "while [ \"\$(docker inspect --format='{{.State.Running}}' e2e-tests 2>/dev/null)\" == \"true\" ]; do sleep 5; done"
          
          EXIT_CODE=$(docker inspect --format='{{.State.ExitCode}}' e2e-tests 2>/dev/null || echo "255")
          
          echo "=============== E2E Test Logs ==============="
          docker logs e2e-tests
          echo "============================================="
          
          if [ "$EXIT_CODE" -ne 0 ]; then
            echo "E2E tests failed with exit code $EXIT_CODE"
            exit 1
          fi

      - name: Show diagnostics on failure
        if: failure()
        run: |
          echo "=============== Container Status ==============="
          docker ps -a
          echo ""
          echo "=============== All Logs ==============="
          docker compose -f e2eTests/docker-compose.yml logs || true
