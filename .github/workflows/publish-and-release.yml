name: Publish and Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  detect:
    if: github.event.pull_request.merged == true
    uses: ./.github/workflows/detect-changed-components.yml

  publish_and_release:
    needs: detect
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ${{ fromJson(needs.detect.outputs.changed-components).component }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Get New Version
        id: generate-new-tag
        uses: anothrNick/github-tag-action@1.73.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_PREFIX: ${{matrix.component}}-
          DRY_RUN: true
          DEFAULT_BUMP: patch
          MAJOR_STRING_TOKEN: "#major_${{ matrix.component }}"
          MINOR_STRING_TOKEN: "#minor_${{ matrix.component }}"
          PATCH_STRING_TOKEN: "#patch_${{ matrix.component }}"
      - name: Extract New Version
        id: new-tag
        run: |
          full_version="${{ steps.generate-new-tag.outputs.new_tag }}"
          component="${{ matrix.component }}"
          version="${full_version#"$component"-}"
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Setup Java
        if: ${{ matrix.component == 'clearinghouse' || matrix.component == 'crypt4gh' || matrix.component == 'tsd-file-api-client' }}
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Publish Jar Files
        if: ${{ matrix.component == 'clearinghouse' || matrix.component == 'tsd-file-api-client' }}
        run: |
          ./gradlew :lib:${{matrix.component}}:publish -Pversion=${{ steps.new-tag.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Jar Files Crypt4gh
        if: ${{ matrix.component == 'crypt4gh' }}
        run: |
          ./gradlew :lib:${{matrix.component}}:publishLibraryPublicationToGithubRegistry -Pversion=${{ steps.new-tag.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish to local staging
        if: ${{ matrix.component == 'crypt4gh'}}
        env:
          SIGNING_KEY_BASE64: ${{ secrets.SIGNING_KEY_BASE64 }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        run: |
          ./gradlew lib:${{matrix.component}}:clean lib:${{matrix.component}}:build lib:${{matrix.component}}:publishMavenJavaPublicationToLocalStagingRepository \
            -Pversion=${{ steps.new-tag.outputs.version }}

      - name: Run JReleaser
        if: ${{ matrix.component == 'crypt4gh'}}
        continue-on-error: true
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_PROJECT_VERSION: ${{ steps.new-tag.outputs.version }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_TOKEN_USER }}
          JRELEASER_MAVENCENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN_PASSWORD }}
        with:
          arguments: deploy -c lib/${{matrix.component}}/jreleaser.yml

      - name: Print Logs
        if: ${{ matrix.component == 'crypt4gh'}}
        run: |
          echo "TRACE LOG:"
          cat lib/${{matrix.component}}/out/jreleaser/trace.log || echo "No trace log found"
          echo "OUTPUT PROPERTIES:"
          cat lib/${{matrix.component}}/out/jreleaser/output.properties || echo "No output properties found"

      - name: Set Repository Name
        if: ${{ matrix.component == 'localega-tsd-proxy' || matrix.component == 'tsd-api-mock' || matrix.component == 'cega-mock' || matrix.component == 'mq-interceptor' }}
        id: repo_name
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "repo_name=$REPO_NAME" >> $GITHUB_ENV

      

      - name: Log in to the Github Container registry
        if: ${{ matrix.component == 'localega-tsd-proxy' || matrix.component == 'tsd-api-mock' || matrix.component == 'cega-mock' || matrix.component == 'mq-interceptor' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Retag and Push Docker Image
        if: ${{ matrix.component == 'localega-tsd-proxy' || matrix.component == 'tsd-api-mock' || matrix.component == 'cega-mock' || matrix.component == 'mq-interceptor' }}
        run: |
          docker pull ghcr.io/${{ env.repo_name }}:${{matrix.component}}-${{ github.event.number }}
          docker tag ghcr.io/${{ env.repo_name }}:${{matrix.component}}-${{ github.event.number }} ghcr.io/${{ env.repo_name }}:${{matrix.component}}-${{ steps.new-tag.outputs.version }}
          docker push ghcr.io/${{ env.repo_name }}:${{matrix.component}}-${{ steps.new-tag.outputs.version }}

      - name: Create and Push New Tag
        if: ${{matrix.component == 'lega-commander'}}
        run: |
          git tag v${{ steps.new-tag.outputs.version }} ${{ github.sha }}

      - name: Publish Go Binaries
        if: ${{matrix.component == 'lega-commander'}}
        uses: goreleaser/goreleaser-action@v6
        with:
          version: "~> v2"
          args: release --clean
          workdir: cli/lega-commander
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CGO_ENABLED: "0"

      - name: Set component path
        run: |
          declare -A component_paths=(
            [lega-commander]="cli:lega-commander"
            [e2eTests]="e2eTests"
            [clearinghouse]="lib:clearinghouse"
            [crypt4gh]="lib:crypt4gh"
            [tsd-file-api-client]="lib:tsd-file-api-client"
            [cega-mock]="services:cega-mock"
            [localega-tsd-proxy]="services:localega-tsd-proxy"
            [mq-interceptor]="services:mq-interceptor"
            [tsd-api-mock]="services:tsd-api-mock"
          )
          echo "component_path=${component_paths[${{ matrix.component }}]}" >> $GITHUB_ENV

      - name: Set changelog path
        run: |
          declare -A component_paths=(
            [lega-commander]="cli/lega-commander"
            [e2eTests]="e2eTests"
            [clearinghouse]="lib/clearinghouse"
            [crypt4gh]="lib/crypt4gh"
            [tsd-file-api-client]="lib/tsd-file-api-client"
            [cega-mock]="services/cega-mock"
            [localega-tsd-proxy]="services/localega-tsd-proxy"
            [mq-interceptor]="services/mq-interceptor"
            [tsd-api-mock]="services/tsd-api-mock"
          )
          path="${component_paths[${{ matrix.component }}]:-.}"
          echo "changelog_path=$path" >> $GITHUB_ENV

      - name: Set PR title
        id: set_pr_title
        env:
          TITLE: ${{ github.event.pull_request.title }}
        run: |
          CLEAN_TITLE="${TITLE//[\"\'\`]/ }"
          echo "pr_title=$CLEAN_TITLE" >> $GITHUB_ENV

      - name: Generate Fancy Changelog
        run: |
          ./gradlew ${{ env.component_path }}:generateChangelog \
            -Pversion=${{ steps.new-tag.outputs.version }} \
            -PprTitle="${{ env.pr_title }}"

      - name: Create GitHub Release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag_name: "${{matrix.component}}-${{ steps.new-tag.outputs.version }}"
          prerelease: false
          body_path: ${{ env.changelog_path }}/CHANGELOG.md
